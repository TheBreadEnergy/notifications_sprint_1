# Generated by Django 5.0.4 on 2024-05-11 14:51

import django.contrib.postgres.fields
import django.db.models.deletion
import tinymce.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=255, unique=True, verbose_name='login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'content"."users',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('layout', tinymce.models.HTMLField(verbose_name='layout')),
                ('event_type', models.IntegerField(choices=[(0, 'Direct'), (1, 'Film added'), (2, 'Account activated')], default=0)),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
                'db_table': 'content"."templates',
            },
        ),
        migrations.CreateModel(
            name='ScheduledNotification',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), size=None, verbose_name='User IDs')),
                ('notification_channel_type', models.IntegerField(choices=[(0, 'Email'), (1, 'SMS'), (2, 'Push')], default=0)),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('text', models.TextField(verbose_name='Text')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'In progress'), (3, 'Completed'), (4, 'Cancelled'), (5, 'Scheduled')], default=0)),
                ('scheduled_at', models.DateTimeField()),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notify.template', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Scheduled notification',
                'verbose_name_plural': 'Scheduled notifications',
                'db_table': 'content"."scheduled_notifications',
            },
        ),
        migrations.CreateModel(
            name='RecurringNotification',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), size=None, verbose_name='User IDs')),
                ('notification_channel_type', models.IntegerField(choices=[(0, 'Email'), (1, 'SMS'), (2, 'Push')], default=0)),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('text', models.TextField(verbose_name='Text')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'In progress'), (3, 'Completed'), (4, 'Cancelled'), (5, 'Scheduled')], default=0)),
                ('cron_string', models.TextField(verbose_name='Cron string')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notify.template', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Recurring notification',
                'verbose_name_plural': 'Recurring notifications',
                'db_table': 'content"."recurring_notifications',
            },
        ),
        migrations.CreateModel(
            name='InstantNotification',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), size=None, verbose_name='User IDs')),
                ('notification_channel_type', models.IntegerField(choices=[(0, 'Email'), (1, 'SMS'), (2, 'Push')], default=0)),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('text', models.TextField(verbose_name='Text')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'In progress'), (3, 'Completed'), (4, 'Cancelled'), (5, 'Scheduled')], default=0)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notify.template', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Instant notification',
                'verbose_name_plural': 'Instant notifications',
                'db_table': 'content"."instant_notifications',
            },
        ),
    ]
