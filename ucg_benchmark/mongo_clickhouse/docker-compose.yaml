version: '3.8'
services:
  x-mongo-common:
    &mongo-common
    image: mongo:5.0.21
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo $(hostname)/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  mongo_cnf_n1:
    <<: *mongo-common
    hostname: mongo_cnf_n1
    container_name: mongo_cnf_n1
    command: mongod --configsvr --replSet mongo_cnf --dbpath /data/db --port 27017 --bind_ip localhost,mongo_cnf_n1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cnf_n1_data:/data/db

  mongo_cnf_n2:
    <<: *mongo-common
    hostname: mongo_cnf_n2
    container_name: mongo_cnf_n2
    command: mongod --configsvr --replSet mongo_cnf --dbpath /data/db --port 27017 --bind_ip localhost,mongo_cnf_n2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cnf_n2_data:/data/db

  config_cnf_rs:
    <<: *mongo-common
    volumes:
      - ./mongo/rs_cnf_setup.js:/conf/setup.js
    command: [
      "mongosh",
      "--host",
      "mongo_cnf_n1",
      "--port",
      "27017",
      "/conf/setup.js"
    ]
    depends_on:
      mongo_cnf_n1:
        condition: service_healthy
      mongo_cnf_n2:
        condition: service_healthy

  mongo_rs1_n1:
    <<: *mongo-common
    hostname: mongo_rs1_n1
    container_name: mongo_rs1_n1
    command: mongod --shardsvr --replSet mongo_rs1 --dbpath /data/db --port 27017 --bind_ip localhost,mongo_rs1_n1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_rs1_n1_data:/data/db

  mongo_rs1_n2:
    <<: *mongo-common
    hostname: mongo_rs1_n2
    container_name: mongo_rs1_n2
    command: mongod --shardsvr --replSet mongo_rs1 --dbpath /data/db --port 27017 --bind_ip localhost,mongo_rs1_n2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_rs1_n2_data:/data/db

  config_rs1:
    <<: *mongo-common
    volumes:
      - ./mongo/rs_1_setup.js:/conf/setup.js
    command: [
      "mongosh",
      "--host",
      "mongo_rs1_n1",
      "--port",
      "27017",
      "/conf/setup.js"
    ]
    depends_on:
      mongo_rs1_n1:
        condition: service_healthy
      mongo_rs1_n2:
        condition: service_healthy

  mongo_rs2_n1:
    <<: *mongo-common
    hostname: mongo_rs2_n1
    container_name: mongo_rs2_n1
    command: mongod --shardsvr --replSet mongo_rs2 --dbpath /data/db --port 27017 --bind_ip localhost,mongo_rs2_n1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_rs2_n1_data:/data/db

  mongo_rs2_n2:
    <<: *mongo-common
    hostname: mongo_rs2_n2
    container_name: mongo_rs2_n2
    command: mongod --shardsvr --replSet mongo_rs2 --dbpath /data/db --port 27017 --bind_ip localhost,mongo_rs2_n2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_rs2_n2_data:/data/db

  config_rs2:
    <<: *mongo-common
    volumes:
      - ./mongo/rs_2_setup.js:/conf/setup.js
    command: [
      "mongosh",
      "--host",
      "mongo_rs2_n1",
      "--port",
      "27017",
      "/conf/setup.js"
    ]
    depends_on:
      mongo_rs2_n1:
        condition: service_healthy
      mongo_rs2_n2:
        condition: service_healthy

  mongos:
    <<: *mongo-common
    command: mongos --configdb mongo_cnf/mongo_cnf_n1:27017,mongo_cnf_n2:27017 --port 27017 --bind_ip localhost,mongos
    hostname: mongos
    container_name: mongos
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=posts_db
    depends_on:
      config_rs1:
        condition: service_completed_successfully
      config_rs2:
        condition: service_completed_successfully
    volumes:
      - /etc/localtime:/etc/localtime:ro

  config_shared_cluster:
    <<: *mongo-common
    command: [
      "mongosh",
      "--host",
      "mongos",
      "--port",
      "27017",
      "/conf/setup.js"
    ]
    volumes:
      - ./mongo/sharded_cluster_setup.js:/conf/setup.js
    depends_on:
      mongos:
        condition: service_healthy


  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    hostname: zookeeper

  clickhouse-node1:
    image: clickhouse/clickhouse-server:24.1.6
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse/data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: clickhouse/clickhouse-server:24.1.6
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: clickhouse/clickhouse-server:24.1.6
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./clickhouse/data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: clickhouse/clickhouse-server:24.1.6
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

volumes:
  mongo_cnf_n1_data:
  mongo_cnf_n2_data:
  mongo_rs1_n1_data:
  mongo_rs1_n2_data:
  mongo_rs2_n1_data:
  mongo_rs2_n2_data: