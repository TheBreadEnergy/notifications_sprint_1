"""Add activation field

Revision ID: b1179a1c5e0a
Revises: cc824d37e9d9
Create Date: 2024-05-11 13:44:49.507813

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b1179a1c5e0a"
down_revision: Union[str, None] = "cc824d37e9d9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "user_history", ["id", "user_device_type"])
    op.add_column(
        "users", sa.Column("activated", sa.Boolean(), nullable=True, default=True)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "activated")
    op.drop_constraint("unique_user_role", "user_roles", type_="unique")
    op.drop_constraint(None, "user_history", type_="unique")
    op.create_table(
        "user_history_mobile",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "attempted",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "user_agent", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("user_device_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("success", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_history_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "id", "user_device_type", name="user_history_mobile_pkey"
        ),
    )
    op.create_table(
        "user_history_smart",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "attempted",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "user_agent", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("user_device_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("success", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_history_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "id", "user_device_type", name="user_history_smart_pkey"
        ),
    )
    op.create_table(
        "user_history_web",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "attempted",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "user_agent", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("user_device_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("success", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_history_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", "user_device_type", name="user_history_web_pkey"),
    )
    # ### end Alembic commands ###
